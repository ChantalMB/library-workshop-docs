var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(c){const d=suggestions.classList.contains('d-none');if(d)return;const a=[...suggestions.querySelectorAll('a')];if(a.length===0)return;const b=a.indexOf(document.activeElement);if(c.key==="ArrowUp"){c.preventDefault();const d=b>0?b-1:0;a[d].focus()}else if(c.key==="ArrowDown"){c.preventDefault();const d=b+1<a.length?b+1:b;a[d].focus()}}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"/",title:"Introduction",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:""}),a.add({id:1,href:"/docs/prologue/",title:"Prologue",description:"Prologue Doks.",content:""}),a.add({id:2,href:"/prologue/quick-start/",title:"Quick Start",description:"One page summary of how to start a new Doks project.",content:"Requirements #  Git â€” latest source release Node.js â€” latest LTS version or newer   Why Node.js? Doks uses npm (included with Node.js) to centralize dependency management, making it easy to update resources, build tooling, plugins, and build scripts. Start a new Doks project # Create a new site, change directories, install dependencies, and start development server.\nCreate a new site # Doks is available as a child theme and a starter theme.\nChild theme #  Intended for novice to intermediate users Intended for minor customizations Easily update npm packages â€” including Doks  git clone https://github.com/h-enk/doks-child-theme.git my-doks-site  Starter theme #  Intended for intermediate to advanced users Intended for major customizations Easily update npm packages  git clone https://github.com/h-enk/doks.git my-doks-site   Help me choose Not sure which one is for you? Pick the child theme. Change directories # cd my-doks-site  Install dependencies # npm install  Start development server # npm run start  Doks will start the Hugo development webserver accessible by default at http://localhost:1313. Saved changes will live reload in the browser.\nOther commands # Doks comes with commands for common tasks. Commands â†’\n"}),a.add({id:3,href:"/prologue/commands/",title:"Commands",description:"Doks comes with commands for common tasks.",content:"ðŸ’¡  You can change the commands in the scripts section of `./package.json`.   create # Create new content for your site:\nnpm run create [path] [flags]  See also the Hugo docs: hugo new.\nDocs based tree # Create a docs based tree â€” with a single command:\nnpm run create -- --kind docs [section]  For example, create a docs based tree named guides:\nnpm run create -- --kind docs guides  lint # Check scripts, styles, and markdown for errors:\nnpm run lint  scripts # Check scripts for errors:\nnpm run lint:scripts [-- --fix]  styles # Check styles for errors:\nnpm run lint:styles [-- --fix]  markdown # Check markdown for errors:\nnpm run lint:markdown [-- --fix]  clean # Delete temporary directories:\nnpm run clean  start # Start local development server:\nnpm run start  build # Build production website:\nnpm run build  functions # Build Lambda functions:\nnpm run build:functions  preview # Build production website including draft and future content:\nnpm run build:preview  "}),a.add({id:4,href:"/docs/workshop-i/",title:"Workshop I: The Command Line \u0026 Git",description:"Workshop I",content:""}),a.add({id:5,href:"/workshop-i/prerequisite-activities/",title:"Prerequisite Activities",description:"Please complete these activities prior to attending the workshop.",content:"Read # The Schism at the Heart of the Open-Source Movement by Sidney Fussell\nDo #  For those using Apple devices: You can make the installation of the following list very quick and easy by first installing Homebrew. Search \u0026ldquo;terminal\u0026rdquo; using Spotlight or in Finder, open the application, then paste the command featured centerally on the linked webpage (hit the little clipboard beside it) and hit enter! I will provide the installation commands for each item listed below that you can enter into the terminal after installing Homebrew.\n  ðŸ“£  Beware: Depending on your internet connectivity, Homebrew can take a long time to install. Best to just run the command and carry about your day, checking on it every so often to make sure there's no error message. If you receieve an error message that you cannot decipher, take a screenshot of your command line and send it to Chantal or Martha so we can help you troubleshoot!      Install Miniconda\n You likely want the 64-bit version This is a \u0026ldquo;command line environment\u0026rdquo;, which essentially means that having this installed allows us to create a container for all of our tech work so that even if something was to go wrong, it would only be in the container and not effect the rest of your computer! Windows Users: From this download, we will be using the Anaconda3 Powershell Prompt! Homebrew installation command: brew install --cask miniconda      Download Visual Studio Code\n More commonly referred to as \u0026ldquo;VS Code\u0026rdquo;, this is a \u0026ldquo;text editor\u0026rdquo; which allows you to write notes in Markdown (a markup language that many web-based platforms use, such as this website). Homebrew installation command: brew install --cask visual-studio-code      Install Git\n Git is a version control software, which is a fancy way of saying it lets you save your projects at any point in the process of creation, and if something goes wrong you can revert the project back to any one of these saved points. We use it via the command line, because instead of tracking and saving just a single file, it does so for a whole folder on your desktop! Homebrew installation command: brew install git      Create a GitHub account\n Github is a repository hosting tool for the projects you save and track with Git. It allows you to publicly share your work.    "}),a.add({id:6,href:"/workshop-i/working-in-the-command-line/",title:"Working in the Command Line",description:"A reference for common commands used when working with the command line interface (CLI).",content:"Command Line Basics #    Mac \u0026amp; Linux Windows Powershell Use     cd [path_to_file] cd [path_to_file] change directory\u0026ndash; go to a different folder on your computer (hint: to go back a step type ..)   ls ls list all the files in the folder you\u0026rsquo;re currently in   pwd pwd print working directory\u0026ndash; if you forget what folder you\u0026rsquo;re in, type this and the command line will tell you where you are   mkdir [folder] mkdir [folder] Creates a new directory (aka folder) in the directory you\u0026rsquo;re in   man [command] help [command] Tells you what a command does by outputting the documentation for it    Keyboard Shortcuts for the Command Line #    Command Use     ctrl + c Cancels the command that is currently running, meaning that the command will stop whatever it\u0026rsquo;s doing immediately.   up and down arrow keys Allows you to see (and re-run) commands you have previously typed   tab Auto-completes file or path names based on the directory you\u0026rsquo;re in.    Common Conda Commands #    Command Use     conda create --name [your_environment_name] Creates a new conda environment for you to work in.   conda install [package name] Installs a package into your conda environment.   conda list Lists all of the packages installed in your current, active environment   conda env list Lists all of the conda environments you\u0026rsquo;ve created   conda env remove --name [your_environment_name] Deletes an environment and everything in it.    For more commands and resources, see the full conda cheat sheet.\n"}),a.add({id:7,href:"/workshop-i/markdown-reference/",title:"Markdown Reference",description:"A reference for writing in Markdown.",content:'More information on Markdown can be found here.\n  Styling Markdown   Headings  # H1 ## H2 ### H3    Bold **bold text**   Italic *italicized text*   Blockquote  Quotation   Ordered list  1. First item 2. Second item 3. Third item    Bullets  - First item - Second item - Third item    Task list  - [x] Write the press release - [ ] Update the website - [ ] Contact the media    Definition list  term : definition    Code `one line of code`   Code block  ``` { "firstName": "Multiple", "lastName": "Lines-of-Code", "age": 2 } ``` /   Link [some text which will be the hyperlink](https://www.alink.com)   Image ![alt text](link_or_file_path_to_image.jpg)   Horizontal rule ---   Table  | Artifact | Observations | | ----------- | ----------- | | item1 | comments | | item2 | comments |    Footnote  Here\'s a sentence with a footnote. [^1] [^1]: This is the footnote.    Subscript~1 H~2~O   Superscript^1 X^2^   Strikethrough ~~Strikethrough~~   Highlight I need to highlight these ==very important words==.  '}),a.add({id:8,href:"/workshop-i/connecting-git-and-github/",title:"Connecting Git and GitHub",description:"Steps for connecting Git (local to your device) to GitHub (on the web).",content:"So GitHub knows that your personal device can be trusted, you must generate a SSH (Secure Shell) key for your device which will then be added to your GitHub account so that you may upload and modify your work from your desktop.\nðŸ‘‰  Windows Users: To configure Git and perform the initial set up of GitHub on your device, you must use Git Bash which is located under the Git folder that can be accessed from the Start menu. After this step is done you may continue to use the Anaconda Powershell Prompt!   Configure # These commands modify the configuration file (aka Settings) for Git, hence calling git config. The flag --global means that these configurations will only be applied to the user account you\u0026rsquo;re logged into, rather than to every account on your device (assuming there\u0026rsquo;s multiple).\n To add a username associated with your device\u0026rsquo;s Git profile (tip: use your Github username so this is easy to remember): git config --global user.name \u0026quot;Your GitHub name here\u0026quot;   To add an email associated with your device\u0026rsquo;s Git profile (use the same email you used for Github): git config --global user.email \u0026quot;your_email@example.com\u0026quot;   To make Git output use colour (easier to read): git config --global color.ui true    Generate the SSH key # Enter:\nssh-keygen -t ed25519 -C \u0026quot;your_email@example.com\u0026quot;   ssh-keygen: Command to let your computer know that you want to generate a SSH key -t: Flag that stands for \u0026lsquo;type\u0026rsquo; ed25519: The \u0026lsquo;type\u0026rsquo; of SSH key aka the algorithim used to generate it -C: Attaches your email to this key as a \u0026lsquo;comment\u0026rsquo;  If you are prompted for a file location, just hit enter so your SSH key is saved at the default location on your device.\nAdd SSH key to GitHub #  Start the SSH-agent in the background so that your SSH key will be active: eval \u0026quot;$(ssh-agent -s)\u0026quot;  This will return something along the lines of Agent pid [some numbers]. Add your SSH key to the active agent: ssh-add ~/.ssh/id_ed25519   Copy the SSH key to your clipboard: clip \u0026lt; ~/.ssh/id_ed25519.pub    Now that your SSH key is activated and copied to your clipboard, in your browser go to GitHub. Go to your account settings,which are accessible from the dropdown menu that appears when you click your icon in the upper right corner of the webpage. In settings, select \u0026ldquo;SSH and GPG Keys\u0026rdquo; from the menu to the left, then click the green \u0026ldquo;New SSH key\u0026rdquo; button. In the smaller input box enter a nickname for the device which your SSH key is associated with, and in the larger input box paste your SSH key.\n"}),a.add({id:9,href:"/workshop-i/pushing-to-github-static-site-resources/",title:"Pushing to GitHub \u0026 Static Site Resources",description:"Adding content to a GitHub repository (repo) and creating static sites.",content:"Using Git # Creating a repository and adding it to Github # After going on to GitHub and creating a new repository by hitting the \u0026ldquo;+\u0026rdquo; symbol in the upper right corner:\n To create the README file (which you can modify later): echo \u0026quot;# [your_project_name]\u0026quot; \u0026gt;\u0026gt; README.md Initialize your folder as a git repository (aka to be tracked with git): git init git add -A git commit -m \u0026quot;first commit\u0026quot; git branch -M main git remote add origin [link to your repository on github] git push -u origin main  Updating your repository following its creation # ðŸ‘‰  If you are working in a repo that has multiple users, your first command before should be git pull so that the repository on your computer receives any changes made by other users!    git add -A git commit -m \u0026quot;A message about what you are adding to the repository with this update\u0026quot; git push -u origin main (note: you can also simply type git push, but specifiying the origin is helpful if there is more than one person working in your repository).  Publishing a Static Site # Once you have Markdown files on GitHub, creating static pages is simple! Go to the \u0026ldquo;Settings\u0026rdquo; tab of you repository on GitHub, then select \u0026ldquo;Pages\u0026rdquo; from the menu: In these GitHub Pages settings, change the source from \u0026ldquo;None\u0026rdquo; to your \u0026ldquo;main\u0026rdquo; branch and hit save to publish your site!\nðŸ“£  Note: It can take up to 10 minutes for your site to publish!   This workshop covers how to publish a single page static site, but if you would like to challenge yourself and use what you learned in this workshop today to go further, here are some resources about creating a complete static site (like this very site you\u0026rsquo;re on right now!) using a static site generator:\n Hugo  How to install Hugo Quick start which walks you through setting up a site following install Hugo site themes   Jekyll (Note: Challenging to use with Windows)  How to install Jekyll Step-by-Step tutorial on setting up static site Jekyll themes and other resources    "}),a.add({id:10,href:"/docs/help/",title:"Help",description:"Help Doks.",content:""}),a.add({id:11,href:"/help/how-to-update/",title:"How to Update",description:"Regularly update the installed npm packages to keep your Doks website stable, usable, and secure.",content:"ðŸ’¡  Learn more about semantic versioning and advanced range syntax.   Check for outdated packages # The npm outdated command will check the registry to see if any (or, specific) installed packages are currently outdated:\nnpm outdated [[\u0026lt;@scope\u0026gt;/]\u0026lt;pkg\u0026gt; ...]  Update packages # The npm update command will update all the packages listed to the latest version (specified by the tag config), respecting semver:\nnpm update [\u0026lt;pkg\u0026gt;...]  "}),a.add({id:12,href:"/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:"Problems updating npm packages # Delete the ./node_modules folder, and run again:\nnpm install  Problems with cache # Delete the temporary directories:\nnpm run clean  "}),a.add({id:13,href:"/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:"Hyas? # Doks is a Hyas theme build by the creator of Hyas.\nFooter notice? # Please keep it in place.\nKeyboard shortcuts for search? #  focus: Ctrl + / select: â†“ and â†‘ open: Enter close: Esc  Other documentation? #  Netlify Hugo  Can I get support? # Create a topic:\n Netlify Community Hugo Forums Doks Discussions  Contact the creator? # Send h-enk a message:\n Netlify Community Hugo Forums Doks Discussions  "}),a.add({id:14,href:"/docs/",title:"Docs",description:"Docs Doks.",content:"meep\n"}),search.addEventListener('input',b,!0);function b(){var b,e;const d=5;b=this.value,e=a.search(b,{limit:d,enrich:!0});const c=new Map;for(const a of e.flatMap(a=>a.result)){if(c.has(a.doc.href))continue;c.set(a.doc.href,a.doc)}if(suggestions.innerHTML="",suggestions.classList.remove('d-none'),c.size===0&&b){const a=document.createElement('div');a.innerHTML=`No results for "<strong>${b}</strong>"`,a.classList.add("suggestion__no-results"),suggestions.appendChild(a);return}for(const[h,g]of c){const b=document.createElement('div');suggestions.appendChild(b);const a=document.createElement('a');a.href=h,b.appendChild(a);const e=document.createElement('span');e.textContent=g.title,e.classList.add("suggestion__title"),a.appendChild(e);const f=document.createElement('span');if(f.textContent=g.description,f.classList.add("suggestion__description"),a.appendChild(f),suggestions.appendChild(b),suggestions.childElementCount==d)break}}})()